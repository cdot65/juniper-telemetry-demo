{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Juniper Telemetry demo documentation # Welcome # First off, hello and welcome to the landing page of my demo\u2019s documentation. My name is Calvin and I work in the sales organization at Juniper Networks; I hope that you will find this project helpful. In this demonstration, we will deploy jtimon as a container to ingest JTI telemetry from Juniper vMX routers. Overview # Let\u2019s talk about the workflow before we get into the requirements. At the end of this page we will have deployed a Docker container running jtimon to collect the streaming telemetry sent by our routers. We will have subscribed to the telemetry path that will send our container information regarding to BGP over gRPC with SSL encryption. Assumptions made on my part # I make a lot of assumptions in this documentation, here\u2019s a short list: you have Docker installed somewhere that can reach the internet you understand the value proposition and technology that powers streaming telemetry you have access to a Juniper device with JTI installed Creating our certs # We will be using SSL certificates for this demo, and if you\u2019ve ever played with SSL you know that it can be a pain. Here are the steps I followed, as given to the readers of this great blog . Let\u2019s start off by generating a self-signed root CA: openssl genrsa -out rootCA.key 2048 openssl req -x509 -new -key ./rootCA.key -days 365 -out ./rootCA.crt Our next step is to use the rootCA to create a certificate for the jtimon container client openssl genrsa -out ./client.key 2048 openssl req -new -key ./client.key -out ./client.csr openssl x509 -req -in ./client.csr -CA ./rootCA.crt -CAkey ./rootCA.key -CAcreateserial -out ./client.crt -days 365 Finally, we will use the rootCA to create a certificate for the jtimon container client pay close attention to the fqdn for this section, it needs to match your router\u2019s hostname openssl genrsa -out ./router.key 2048 openssl req -new -key ./router.key -out ./router.csr openssl x509 -req -in ./router.csr -CA ./rootCA.crt -CAkey ./rootCA.key -CAcreateserial -out ./router.crt -days 365 cat ./router.crt ./router.key > ./router.pem Copy relevant certs to router # Let\u2019s use SCP to copy the certs to our router; only relevant files are transferred and stored in the router\u2019s /var/tmp/ directory. scp rootCA.crt client.crt router.pem root@192.168.110.11:/var/tmp/ Configure JunOS # Three steps here, each with their own commit operation. create CA profile and new local certificate load CA profile and configure streaming attributes enable the streaming of telemetry to our jtimon container create CA profile and new local certificate # load CA profile and configure streaming attributes # enable the streaming of telemetry to our jtimon container # This page is automatically generated","title":"Homepage"},{"location":"#juniper-telemetry-demo-documentation","text":"","title":"Juniper Telemetry demo documentation"},{"location":"#welcome","text":"First off, hello and welcome to the landing page of my demo\u2019s documentation. My name is Calvin and I work in the sales organization at Juniper Networks; I hope that you will find this project helpful. In this demonstration, we will deploy jtimon as a container to ingest JTI telemetry from Juniper vMX routers.","title":"Welcome"},{"location":"#overview","text":"Let\u2019s talk about the workflow before we get into the requirements. At the end of this page we will have deployed a Docker container running jtimon to collect the streaming telemetry sent by our routers. We will have subscribed to the telemetry path that will send our container information regarding to BGP over gRPC with SSL encryption.","title":"Overview"},{"location":"#assumptions-made-on-my-part","text":"I make a lot of assumptions in this documentation, here\u2019s a short list: you have Docker installed somewhere that can reach the internet you understand the value proposition and technology that powers streaming telemetry you have access to a Juniper device with JTI installed","title":"Assumptions made on my part"},{"location":"#creating-our-certs","text":"We will be using SSL certificates for this demo, and if you\u2019ve ever played with SSL you know that it can be a pain. Here are the steps I followed, as given to the readers of this great blog . Let\u2019s start off by generating a self-signed root CA: openssl genrsa -out rootCA.key 2048 openssl req -x509 -new -key ./rootCA.key -days 365 -out ./rootCA.crt Our next step is to use the rootCA to create a certificate for the jtimon container client openssl genrsa -out ./client.key 2048 openssl req -new -key ./client.key -out ./client.csr openssl x509 -req -in ./client.csr -CA ./rootCA.crt -CAkey ./rootCA.key -CAcreateserial -out ./client.crt -days 365 Finally, we will use the rootCA to create a certificate for the jtimon container client pay close attention to the fqdn for this section, it needs to match your router\u2019s hostname openssl genrsa -out ./router.key 2048 openssl req -new -key ./router.key -out ./router.csr openssl x509 -req -in ./router.csr -CA ./rootCA.crt -CAkey ./rootCA.key -CAcreateserial -out ./router.crt -days 365 cat ./router.crt ./router.key > ./router.pem","title":"Creating our certs"},{"location":"#copy-relevant-certs-to-router","text":"Let\u2019s use SCP to copy the certs to our router; only relevant files are transferred and stored in the router\u2019s /var/tmp/ directory. scp rootCA.crt client.crt router.pem root@192.168.110.11:/var/tmp/","title":"Copy relevant certs to router"},{"location":"#configure-junos","text":"Three steps here, each with their own commit operation. create CA profile and new local certificate load CA profile and configure streaming attributes enable the streaming of telemetry to our jtimon container","title":"Configure JunOS"},{"location":"#create-ca-profile-and-new-local-certificate","text":"","title":"create CA profile and new local certificate"},{"location":"#load-ca-profile-and-configure-streaming-attributes","text":"","title":"load CA profile and configure streaming attributes"},{"location":"#enable-the-streaming-of-telemetry-to-our-jtimon-container","text":"This page is automatically generated","title":"enable the streaming of telemetry to our jtimon container"}]}